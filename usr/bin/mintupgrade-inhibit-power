#!/usr/bin/python3
import sys
import psutil
import time

from gi.repository import GLib, Gio

desktop = sys.argv[2]
bus = Gio.bus_get_sync(Gio.BusType.SESSION)

    # 1: Inhibit logging out
    # 2: Inhibit user switching
    # 4: Inhibit suspending the session or computer
    # 8: Inhibit the session being marked as idle

FLAGS = 1 | 2 | 4 | 8

if desktop == "xfce":
    name = "org.freedesktop.PowerManagement"
    path = "/org/freedesktop/PowerManagement/Inhibit"
    iface = "org.freedesktop.PowerManagement.Inhibit"
    args = GLib.Variant("(ss)", ("mintupgrade", "Performing a system upgrade"))
else:
    name = "org.gnome.SessionManager"
    path = "/org/gnome/SessionManager"
    iface = "org.gnome.SessionManager"
    args = GLib.Variant("(susu)", ("mintupgrade", 0, "Performing a system upgrade", FLAGS))

try:
    bus.call_sync(name,
                  path,
                  iface,
                  "Inhibit",
                  args,
                  None,
                  Gio.DBusCallFlags.NONE,
                  2000,
                  None)
except Exception as e:
    exit(1)
    # print(e)

while psutil.pid_exists(int(sys.argv[1])):
    time.sleep(1)

exit(0)